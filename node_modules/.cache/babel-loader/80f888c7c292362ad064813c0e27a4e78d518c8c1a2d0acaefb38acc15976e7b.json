{"ast":null,"code":"import { ref, nextTick, onUpdated } from \"vue\";\nexport default {\n  props: {\n    isPreview: {\n      type: Boolean,\n      required: true\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    message: {\n      type: String,\n      required: true\n    },\n    isTyping: {\n      type: Boolean,\n      required: true\n    },\n    userId: {\n      type: String,\n      required: true\n    },\n    errorSendMsg: {\n      type: String,\n      required: true\n    }\n  },\n  emits: [\"sendMessage\", \"update:message\", \"validateMessage\"],\n  setup() {\n    let chatArea = ref(null);\n    let refscrollHeight = ref(null);\n    const update = () => {\n      nextTick(() => {\n        chatArea.value.scrollTo({\n          behavior: \"smooth\",\n          top: refscrollHeight.value.clientHeight\n        });\n      });\n    };\n    onUpdated(update);\n    return {\n      update,\n      chatArea,\n      refscrollHeight\n    };\n  }\n};","map":{"version":3,"mappings":"AAsDA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ,CAAC;IACDG,OAAO,EAAE;MACPL,IAAI,EAAEM,MAAM;MACZJ,QAAQ,EAAE;IACZ,CAAC;IACDK,QAAQ,EAAE;MACRP,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDM,MAAM,EAAE;MACNR,IAAI,EAAEM,MAAM;MACZJ,QAAQ,EAAE;IACZ,CAAC;IACDO,YAAY,EAAE;MACZT,IAAI,EAAEM,MAAM;MACZJ,QAAQ,EAAE;IACZ;EACF,CAAC;EACDQ,KAAK,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,iBAAiB,CAAC;EAC3DC,KAAK,GAAG;IACN,IAAIC,QAAO,GAAIjB,GAAG,CAAC,IAAI,CAAC;IACxB,IAAIkB,eAAc,GAAIlB,GAAG,CAAC,IAAI,CAAC;IAE/B,MAAMmB,MAAK,GAAI,MAAM;MACnBlB,QAAQ,CAAC,MAAM;QACbgB,QAAQ,CAACG,KAAK,CAACC,QAAQ,CAAC;UACtBC,QAAQ,EAAE,QAAQ;UAClBC,GAAG,EAAEL,eAAe,CAACE,KAAK,CAACI;QAC7B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDtB,SAAS,CAACiB,MAAM,CAAC;IAEjB,OAAO;MACLA,MAAM;MACNF,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","names":["ref","nextTick","onUpdated","props","isPreview","type","Boolean","required","messages","Array","message","String","isTyping","userId","errorSendMsg","emits","setup","chatArea","refscrollHeight","update","value","scrollTo","behavior","top","clientHeight"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/chat_client/client/src/components/ChatBox.vue"],"sourcesContent":["<template>\n  <div class=\"chat-box\" :class=\"[isPreview ? '' : 'none']\">\n    <div class=\"chat-area\" ref=\"chatArea\">\n      <div class=\"chat-message-item\" ref=\"refscrollHeight\">\n        <div\n          class=\"message-item\"\n          v-for=\"m in messages\"\n          :key=\"m._id\"\n          :class=\"{\n            'my-message': m.userId === userId,\n            'recived-message': m.userId !== userId,\n          }\"\n        >\n          <div class=\"h-message-item\">\n            <b class=\"message-user\">{{ m.username }} </b>\n            <p\n              class=\"message-text\"\n              :class=\"{\n                'my-message-color': m.userId === userId,\n              }\"\n            >\n              {{ m.message }}\n            </p>\n            <small class=\"message-date\">{{ m.date }}</small>\n          </div>\n        </div>\n        <small class=\"message-is-typing\" v-if=\"isTyping\">\n          {{ isTyping }} co≈õ pisze ...\n        </small>\n      </div>\n    </div>\n    <form class=\"send-form\" novalidate @submit.prevent=\"$emit('sendMessage')\">\n      <div class=\"send-box\">\n        <label for=\"form-label\" class=\"form-label\">Chat</label>\n        <input\n          type=\"text\"\n          class=\"send-input input\"\n          :value=\"message\"\n          autocomplete=\"off\"\n          placeholder=\"Write your message\"\n          @input=\"(event) => $emit('update:message', event.target.value)\"\n        />\n        <div v-if=\"errorSendMsg\" class=\"error-message\">\n          {{ errorSendMsg }}\n        </div>\n      </div>\n      <div class=\"btn-box\">\n        <button class=\"btn send-button\" type=\"submit\">Send</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, onUpdated } from \"vue\";\n\nexport default {\n  props: {\n    isPreview: {\n      type: Boolean,\n      required: true,\n    },\n    messages: {\n      type: Array,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    isTyping: {\n      type: Boolean,\n      required: true,\n    },\n    userId: {\n      type: String,\n      required: true,\n    },\n    errorSendMsg: {\n      type: String,\n      required: true,\n    },\n  },\n  emits: [\"sendMessage\", \"update:message\", \"validateMessage\"],\n  setup() {\n    let chatArea = ref(null);\n    let refscrollHeight = ref(null);\n\n    const update = () => {\n      nextTick(() => {\n        chatArea.value.scrollTo({\n          behavior: \"smooth\",\n          top: refscrollHeight.value.clientHeight,\n        });\n      });\n    };\n\n    onUpdated(update);\n\n    return {\n      update,\n      chatArea,\n      refscrollHeight,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chat-box {\n  width: 100%;\n  height: 100%;\n  margin: 1rem;\n  .chat-area {\n    width: 100%;\n    height: 100%;\n    box-shadow: 7px 5px 46px -16px $accent_color;\n    border: 2px solid $accent_color;\n    background-color: rgba($accent_color, 0.1);\n    overflow: auto;\n    .chat-message-item {\n      height: auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      color: #000;\n      overflow: auto;\n      .message-item {\n        display: inline-flex;\n        margin: 0.5rem 1rem;\n        .message-text {\n          background-color: rgba($accent_color, 0.5);\n          margin-top: 0;\n          text-align: left;\n          padding: 0.8rem;\n        }\n        .message-user {\n          display: flex;\n          text-align: left;\n          padding: 0.5rem;\n        }\n        .message-date {\n          font-weight: 200;\n        }\n      }\n    }\n    .message-is-typing {\n      font-weight: 600;\n      padding: 1rem;\n      text-align: left;\n    }\n  }\n  /*********SEND_MESSAGE*************/\n\n  .send-form {\n    width: 100%;\n    @include flex;\n    .send-box {\n      display: flex;\n      justify-content: center;\n      flex-direction: column;\n      align-items: center;\n      width: 60%;\n      margin: 1rem 1rem;\n      padding: 1rem 0;\n      .send-input {\n        width: 100%;\n      }\n    }\n    .btn-box {\n      width: 40%;\n      .send-button {\n        width: 100%;\n        padding: 1rem;\n      }\n    }\n  }\n}\n\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .chat-box {\n    width: 100%;\n  }\n}\n// @include mostPhone {\n//   .chat-box {\n//   }\n// }\n@include smallerDesktop {\n  .chat-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 900px) {\n  .users-box {\n    width: 100%;\n  }\n}\n\n@include mostTablets {\n}\n@media (min-width: 900px) {\n  .users-box {\n    display: block;\n  }\n  .chat-box {\n    display: block;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}