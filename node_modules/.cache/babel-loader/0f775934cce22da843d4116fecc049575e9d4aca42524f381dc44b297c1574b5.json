{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4a3fa6b9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"users-headline\"\n}, \"Users Online:\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"user-list-item\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"users-headline\"\n}, \"Rooms:\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"users-box\", [$props.isPreview ? 'none' : '']])\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.users, u => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      class: \"users-list\",\n      key: u.id\n    }, [_createElementVNode(\"li\", _hoisted_2, _toDisplayString(u.username), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.rooms, r => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      class: \"users-list\",\n      key: r.date\n    }, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n      onClick: event => {\n        _ctx.$emit('update:roomId', r._id);\n      },\n      class: \"btn send-button user-list-item\"\n    }, _toDisplayString(r.name), 9 /* TEXT, PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;gEAGIA,oBAA6C;EAAzCC,KAAK,EAAC;AAAgB,GAAC,eAAa;;EAElCA,KAAK,EAAC;AAAgB;gEAE5BD,oBAAsC;EAAlCC,KAAK,EAAC;AAAgB,GAAC,QAAM;;;uBALnCC,oBAoBM;IApBDD,KAAK,mBAAC,WAAW,GAAUE,gBAAS;MACvCC,UAA6C,qBAC7CF,oBAEKG,6BAF8BF,YAAK,EAAVG,CAAC;yBAA/BJ,oBAEK;MAFDD,KAAK,EAAC,YAAY;MAAqBM,GAAG,EAAED,CAAC,CAACE;QAChDR,oBAAgD,MAAhDS,UAAgD,mBAAlBH,CAAC,CAACI,QAAQ;kCAE1CC,UAAsC,qBACtCT,oBAaKG,6BAb8BF,YAAK,EAAVS,CAAC;yBAA/BV,oBAaK;MAbDD,KAAK,EAAC,YAAY;MAAqBM,GAAG,EAAEK,CAAC,CAACC;QAChDb,oBAWK,aAVHA,oBASS;MARNc,OAAK,EAAgBC,KAAK;QAAqBC,UAAK,kBAAkBJ,CAAC,CAACK,GAAG;;MAK5EhB,KAAK,EAAC;wBAEHW,CAAC,CAACM,IAAI","names":["_createElementVNode","class","_createElementBlock","$props","_hoisted_1","_Fragment","u","key","id","_hoisted_2","username","_hoisted_3","r","date","onClick","event","_ctx","_id","name"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/chat_client/client/src/components/UserList.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"users-box\" :class=\"[isPreview ? 'none' : '']\">\n    <h3 class=\"users-headline\">Users Online:</h3>\n    <ul class=\"users-list\" v-for=\"u in users\" :key=\"u.id\">\n      <li class=\"user-list-item\">{{ u.username }}</li>\n    </ul>\n    <h3 class=\"users-headline\">Rooms:</h3>\n    <ul class=\"users-list\" v-for=\"r in rooms\" :key=\"r.date\">\n      <li>\n        <button\n          @click=\"\n            (event) => {\n              $emit('update:roomId', r._id);\n            }\n          \"\n          class=\"btn send-button user-list-item\"\n        >\n          {{ r.name }}\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, onUpdated } from \"vue\";\n\nexport default {\n  emits: [\"update:roomName\", \"createRoom\", \"joinToChat\", \"update:roomId\"],\n  props: {\n    roomName: {\n      type: String,\n      required: false,\n    },\n    rooms: {\n      type: Array,\n      required: true,\n    },\n    users: {\n      type: Array,\n      required: true,\n    },\n    roomId: {\n      type: String,\n      required: false,\n      value: \"1\",\n    },\n    isPreview: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  setup() {\n    let refscrollHeight = ref(null);\n\n    const update = () => {\n      nextTick(() => {\n        console.log(\"tick\");\n      });\n    };\n\n    onUpdated(update);\n\n    return {\n      update,\n      refscrollHeight,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.send-button {\n  width: 100%;\n}\n.container-join {\n  @include flex;\n  width: 50%;\n  border: 2px $accent_color solid;\n  box-shadow: 7px 5px 46px -16px $accent_color;\n  .join-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-content: space-around;\n    .page-start {\n      margin: 2rem 0 3rem 0;\n      text-transform: uppercase;\n      text-align: center;\n    }\n    .join-box {\n      margin: 3rem 0 6rem 0;\n    }\n    .form-button {\n      padding: 1.2rem 2.8rem;\n      margin: 0 0 2rem 0;\n    }\n  }\n}\n\n.modal {\n  position: fixed;\n  z-index: 999;\n  top: 20%;\n  left: 50%;\n  width: 300px;\n  margin-left: -150px;\n  background-color: white;\n}\n.color {\n  color: black;\n}\n.users-box {\n  width: 50%;\n  min-height: 100%;\n  box-shadow: 7px 5px 46px -16px $accent_color;\n  border: 2px solid $accent_color;\n  color: #fff;\n  margin: 1rem;\n  .users-headline {\n    @include flex;\n    border-bottom: 2px solid $accent_color;\n    background-color: rgba($accent_color, 0.5);\n    padding: 1.3rem 0;\n    margin: 0;\n    text-transform: uppercase;\n    text-align: center;\n  }\n}\n\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .users-box {\n    width: 100%;\n    margin: 0.5rem;\n  }\n}\n@include mostPhone {\n  .users-box {\n    width: 100%;\n  }\n}\n@include mostTablets {\n  .users-box {\n    width: 100%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}