{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport io from 'socket.io-client';\nimport { ref, watch } from 'vue';\nimport JoinUserComponent from '@/components/LoginBox';\nimport UserListComponent from '@/components/UserList';\nimport ChatBoxComponent from '@/components/ChatBox';\nimport createRoomComponent from '@/components/createRoom.vue';\nexport default {\n  name: 'App',\n  components: {\n    JoinUserComponent,\n    UserListComponent,\n    ChatBoxComponent,\n    createRoomComponent\n  },\n  setup() {\n    const socket = io('http://192.168.1.86:3000');\n    const users = ref([]);\n    const rooms = ref([]);\n    const messages = ref([]);\n    const message = ref('');\n    const roomId = ref('');\n    const roomName = ref('');\n    const username = ref('');\n    const selected = ref(0);\n    let isReady = ref(false);\n    let isPreview = ref(false);\n    let isTyping = ref(false);\n    let userId = ref('');\n    const changeSelected = i => {\n      selected.value = i;\n    };\n\n    /*********VALIDATE************* */\n\n    let errorLoginMsg = ref('');\n    let errorSendMsg = ref('');\n\n    //***************Socket function*******************\n\n    socket.on('initChat', data => {\n      messages.value = data.messages;\n    });\n    socket.on('userConnected', username => {\n      console.log(`${username} has joined`);\n    });\n    socket.on('userDisconnected', username => {\n      console.log(`${username} has leaved`);\n    });\n    socket.on('getUsers', data => {\n      users.value = data;\n    });\n    socket.on('getRooms', data => {\n      rooms.value = data;\n    });\n    socket.on('newMessage', data => {\n      messages.value.push(data);\n    });\n    socket.on('newRoom', data => {\n      rooms.value.push(data);\n    });\n    socket.on('refreshChat', data => {\n      messages.value = data;\n    });\n\n    // *********User Typing********\n\n    socket.on('isTyping', data => {\n      isTyping.value = data;\n    });\n    socket.on('stopTyping', () => {\n      isTyping.value = false;\n    });\n    watch(message, m => {\n      m ? socket.emit('isTyping', username.value) : socket.emit('stopTyping');\n    });\n    watch(roomId, m => {\n      m ? socket.emit('newRoomId', roomId) : '';\n    });\n\n    //*****Join User to Chat************\n\n    const joinToChat = () => {\n      if (/^(([a-zA-Z0-9]{3,}))+$/.test(username.value) == false) {\n        errorLoginMsg.value = 'Użuj minimum 3 liter lub cyfr';\n      } else {\n        socket.emit('enterUsername', {\n          username: username.value\n        });\n        username.value = '';\n        isReady.value = true;\n        userId.value = socket.id;\n      }\n    };\n\n    /*********Send New Message******** */\n\n    const sendMessage = () => {\n      if (message.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste';\n      } else {\n        console.log('the room id is ', roomId.value);\n        socket.emit('newMessage', {\n          room: roomId,\n          username: username.value,\n          message: message.value\n        });\n        message.value = '';\n      }\n    };\n    const createRoom = () => {\n      if (roomName.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste';\n      } else {\n        console.log('the room id is ', roomId);\n        socket.emit('newRoom', {\n          roomName: roomName.value\n        });\n        roomName.value = '';\n      }\n    };\n    return {\n      socket,\n      username,\n      message,\n      roomName,\n      users,\n      rooms,\n      roomId,\n      messages,\n      joinToChat,\n      sendMessage,\n      createRoom,\n      userId,\n      isReady,\n      isTyping,\n      isPreview,\n      selected,\n      changeSelected,\n      errorLoginMsg,\n      errorSendMsg\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["io","ref","watch","JoinUserComponent","UserListComponent","ChatBoxComponent","createRoomComponent","name","components","setup","socket","users","rooms","messages","message","roomId","roomName","username","selected","isReady","isPreview","isTyping","userId","changeSelected","i","value","errorLoginMsg","errorSendMsg","on","data","console","log","push","m","emit","joinToChat","test","id","sendMessage","room","createRoom"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/isucorp/client/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"page-headline\">Chat</h1>\n    <!-- Responsive toggle switch -->\n    <div class=\"switch-box\" v-if=\"isReady\">\n      <ul class=\"switch-list\">\n        <li\n          class=\"list-item\"\n          :class=\"{ selected: selected === 0 }\"\n          @click=\"changeSelected(0), (isPreview = false)\"\n        >\n          Login\n        </li>\n        <li\n          class=\"list-item\"\n          :class=\"{ selected: selected === 1 }\"\n          @click=\"changeSelected(1), (isPreview = true)\"\n        >\n          chat\n        </li>\n      </ul>\n    </div>\n    <!-- End Responsive toggle -->\n\n    <JoinUserComponent\n      v-if=\"!isReady\"\n      v-model:username=\"username\"\n      @submit=\"joinToChat\"\n      :errorLoginMsg=\"errorLoginMsg\"\n    />\n\n    <div class=\"wrapper\" v-if=\"isReady\">\n      <UserListComponent\n        :users=\"users\"\n        :roomId=\"roomId\"\n        :rooms=\"rooms\"\n        :isPreview=\"isPreview\"\n        v-model:roomId=\"roomId\"\n      />\n\n      <ChatBoxComponent\n        :isPreview=\"isPreview\"\n        :messages=\"messages\"\n        :isTyping=\"isTyping\"\n        :userId=\"userId\"\n        :errorSendMsg=\"errorSendMsg\"\n        v-model:message=\"message\"\n        @submit=\"sendMessage\"\n      />\n      \n      <createRoomComponent\n        :isPreview=\"isPreview\"\n        :messages=\"messages\"\n        :isTyping=\"isTyping\"\n        :userId=\"userId\"\n        :errorSendMsg=\"errorSendMsg\"\n        v-model:roomName=\"roomName\"\n        @submit=\"createRoom\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client'\nimport { ref, watch } from 'vue'\n\nimport JoinUserComponent from '@/components/LoginBox'\nimport UserListComponent from '@/components/UserList'\nimport ChatBoxComponent from '@/components/ChatBox'\nimport createRoomComponent from '@/components/createRoom.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    JoinUserComponent,\n    UserListComponent,\n    ChatBoxComponent,\n    createRoomComponent,\n  },\n  setup() {\n    const socket = io('http://192.168.1.86:3000')\n    const users = ref([])\n    const rooms = ref([])\n    const messages = ref([])\n    const message = ref('')\n    const roomId = ref('')\n    const roomName = ref('')\n    const username = ref('')\n    const selected = ref(0)\n\n    let isReady = ref(false)\n    let isPreview = ref(false)\n    let isTyping = ref(false)\n    let userId = ref('')\n\n    const changeSelected = (i) => {\n      selected.value = i\n    }\n\n    /*********VALIDATE************* */\n\n    let errorLoginMsg = ref('')\n    let errorSendMsg = ref('')\n\n    //***************Socket function*******************\n\n    socket.on('initChat', (data) => {\n      messages.value = data.messages\n    })\n\n    socket.on('userConnected', (username) => {\n      console.log(`${username} has joined`)\n    })\n\n    socket.on('userDisconnected', (username) => {\n      console.log(`${username} has leaved`)\n    })\n\n    socket.on('getUsers', (data) => {\n      users.value = data\n    })\n    socket.on('getRooms', (data) => {\n      rooms.value = data\n    })\n\n    socket.on('newMessage', (data) => {\n      messages.value.push(data)\n    })\n    socket.on('newRoom', (data) => {\n      rooms.value.push(data)\n    })\n    socket.on('refreshChat', (data) => {\n      messages.value = data\n    })\n\n    // *********User Typing********\n\n    socket.on('isTyping', (data) => {\n      isTyping.value = data\n    })\n    socket.on('stopTyping', () => {\n      isTyping.value = false\n    })\n\n    watch(message, (m) => {\n      m ? socket.emit('isTyping', username.value) : socket.emit('stopTyping')\n    })\n\n    watch(roomId, (m) => {\n      m ? socket.emit('newRoomId', roomId) : ''\n    })\n\n    //*****Join User to Chat************\n\n    const joinToChat = () => {\n      if (/^(([a-zA-Z0-9]{3,}))+$/.test(username.value) == false) {\n        errorLoginMsg.value = 'Użuj minimum 3 liter lub cyfr'\n      } else {\n        socket.emit('enterUsername', { username: username.value })\n        username.value = ''\n        isReady.value = true\n        userId.value = socket.id\n      }\n    }\n\n    /*********Send New Message******** */\n\n    const sendMessage = () => {\n      if (message.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste'\n      } else {\n        console.log('the room id is ', roomId.value)\n        socket.emit('newMessage', {\n          room: roomId,\n          username: username.value,\n          message: message.value,\n        })\n        message.value = ''\n      }\n    }\n\n    const createRoom = () => {\n      if (roomName.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste'\n      } else {\n        console.log('the room id is ', roomId)\n        socket.emit('newRoom', {\n          roomName: roomName.value,\n        })\n        roomName.value = ''\n      }\n    }\n\n    return {\n      socket,\n      username,\n      message,\n      roomName,\n      users,\n      rooms,\n      roomId,\n      messages,\n      joinToChat,\n      sendMessage,\n      createRoom,\n      userId,\n      isReady,\n      isTyping,\n      isPreview,\n      selected,\n      changeSelected,\n      errorLoginMsg,\n      errorSendMsg,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@use './scss/index.scss' as *;\n\n.wrapper {\n  @include flex;\n  width: 100%;\n  height: 30rem;\n}\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .container {\n    font-size: $font_size_to_340;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include mostPhone {\n  .container {\n    font-size: $font_size_to_340;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include mostTablets {\n  .container {\n    font-size: $font_size_to_576;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include smallerDesktop {\n  .container {\n    font-size: $font_size_to_1200;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}