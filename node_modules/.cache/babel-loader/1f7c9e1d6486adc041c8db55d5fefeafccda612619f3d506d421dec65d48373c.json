{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-0fa2e3d3\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"chat-area\",\n  ref: \"chatArea\"\n};\nvar _hoisted_2 = {\n  \"class\": \"chat-message-item\",\n  ref: \"refscrollHeight\"\n};\nvar _hoisted_3 = {\n  \"class\": \"h-message-item\"\n};\nvar _hoisted_4 = {\n  \"class\": \"message-user\"\n};\nvar _hoisted_5 = {\n  \"class\": \"message-date\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"message-is-typing\"\n};\nvar _hoisted_7 = {\n  \"class\": \"send-box\"\n};\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"form-label\",\n    \"class\": \"form-label\"\n  }, \"Napisz wiadomość\", -1 /* HOISTED */);\n});\nvar _hoisted_9 = [\"value\"];\nvar _hoisted_10 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"btn-box\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn send-button\",\n    type: \"submit\"\n  }, \"Wyślij\")], -1 /* HOISTED */);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": _normalizeClass([\"chat-box\", [$props.isPreview ? '' : 'none']])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, function (m) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      \"class\": _normalizeClass([\"message-item\", {\n        'my-message': m.userId === $props.userId,\n        'recived-message': m.userId !== $props.userId\n      }]),\n      key: m._id\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"b\", _hoisted_4, _toDisplayString(m.username), 1 /* TEXT */), _createElementVNode(\"p\", {\n      \"class\": _normalizeClass([\"message-text\", {\n        'my-message-color': m.userId === $props.userId\n      }])\n    }, _toDisplayString(m.message), 3 /* TEXT, CLASS */), _createElementVNode(\"small\", _hoisted_5, _toDisplayString(m.date), 1 /* TEXT */)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $props.isTyping ? (_openBlock(), _createElementBlock(\"small\", _hoisted_6, _toDisplayString($props.isTyping) + \" coś pisze ... \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)], 512 /* NEED_PATCH */), _createElementVNode(\"form\", {\n    \"class\": \"send-form\",\n    novalidate: \"\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return _ctx.$emit('sendMessage');\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"send-input input\",\n    value: $props.message,\n    autocomplete: \"off\",\n    placeholder: \"Npaisz wiadomość\",\n    onInput: _cache[0] || (_cache[0] = function (event) {\n      return _ctx.$emit('update:message', event.target.value);\n    })\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_9), $props.errorSendMsg ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($props.errorSendMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_11], 32 /* HYDRATE_EVENTS */)], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;;;;EAES,SAAM,WAAW;EAACA,GAAG,EAAC;;;EACpB,SAAM,mBAAmB;EAACA,GAAG,EAAC;;;EAU1B,SAAM;AAAgB;;EACtB,SAAM;AAAc;;EAShB,SAAM;AAAc;;;EAGxB,SAAM;;;EAMV,SAAM;AAAU;;sBACnBC,oBAAmE;IAA5D,OAAI,YAAY;IAAC,SAAM;KAAa,kBAAgB;AAAA;;;;EASlC,SAAM;;;sBAIjCA,oBAEM;IAFD,SAAM;EAAS,iBAClBA,oBAA6D;IAArD,SAAM,iBAAiB;IAACC,IAAI,EAAC;KAAS,QAAM;;;;uBA9C1DC,oBAiDM;IAjDD,SAAKC,iBAAC,UAAU,GAAUC,gBAAS;MACtCJ,oBA4BM,OA5BNK,UA4BM,GA3BJL,oBA0BM,OA1BNM,UA0BM,sBAzBJJ,oBAqBMK,6BAnBQH,eAAQ,YAAbI,CAAC;yBAFVN,oBAqBM;MApBJ,SAAKC,iBAAC,cAAc;sBAGgBK,CAAC,CAACC,MAAM,KAAKL,aAAM;2BAAiCI,CAAC,CAACC,MAAM,KAAKL;;MADpGM,GAAG,EAAEF,CAAC,CAACG;QAMRX,oBAWM,OAXNY,UAWM,GAVJZ,oBAA6C,KAA7Ca,UAA6C,mBAAlBL,CAAC,CAACM,QAAQ,kBACrCd,oBAOI;MANF,SAAKG,iBAAC,cAAc;4BAC0BK,CAAC,CAACC,MAAM,KAAKL;;wBAIxDI,CAAC,CAACO,OAAO,yBAEdf,oBAAgD,SAAhDgB,UAAgD,mBAAjBR,CAAC,CAACS,IAAI;kCAGFb,eAAQ,kBAA/CF,oBAEQ,SAFRgB,UAEQ,mBADHd,eAAQ,IAAG,iBAChB,sGAGJJ,oBAkBO;IAlBD,SAAM,WAAW;IAACmB,UAAU,EAAV,EAAU;IAAEC,QAAM;MAAA,OAAUC,UAAK;IAAA;MACvDrB,oBAaM,OAbNsB,UAaM,GAZJC,UAAmE,EACnEvB,oBAOE;IANAC,IAAI,EAAC,MAAM;IACX,SAAM,kBAAkB;IACvBuB,KAAK,EAAEpB,cAAO;IACfqB,YAAY,EAAC,KAAK;IAClBC,WAAW,EAAC,kBAAkB;IAC7BC,OAAK,sCAAGC,KAAK;MAAA,OAAKP,UAAK,mBAAmBO,KAAK,CAACC,MAAM,CAACL,KAAK;IAAA;wDAEpDpB,mBAAY,kBAAvBF,oBAEM,OAFN4B,WAEM,mBADD1B,mBAAY,yDAGnB2B,WAEM","names":["ref","_createElementVNode","type","_createElementBlock","_normalizeClass","$props","_hoisted_1","_hoisted_2","_Fragment","m","userId","key","_id","_hoisted_3","_hoisted_4","username","message","_hoisted_5","date","_hoisted_6","novalidate","onSubmit","_ctx","_hoisted_7","_hoisted_8","value","autocomplete","placeholder","onInput","event","target","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/isucorp/client/src/components/ChatBox.vue"],"sourcesContent":["<template>\n  <div class=\"chat-box\" :class=\"[isPreview ? '' : 'none']\">\n    <div class=\"chat-area\" ref=\"chatArea\">\n      <div class=\"chat-message-item\" ref=\"refscrollHeight\">\n        <div\n          class=\"message-item\"\n          v-for=\"m in messages\"\n          :key=\"m._id\"\n          :class=\"{\n            'my-message': m.userId === userId,\n            'recived-message': m.userId !== userId,\n          }\"\n        >\n          <div class=\"h-message-item\">\n            <b class=\"message-user\">{{ m.username }} </b>\n            <p\n              class=\"message-text\"\n              :class=\"{\n                'my-message-color': m.userId === userId,\n              }\"\n            >\n              {{ m.message }}\n            </p>\n            <small class=\"message-date\">{{ m.date }}</small>\n          </div>\n        </div>\n        <small class=\"message-is-typing\" v-if=\"isTyping\">\n          {{ isTyping }} coś pisze ...\n        </small>\n      </div>\n    </div>\n    <form class=\"send-form\" novalidate @submit.prevent=\"$emit('sendMessage')\">\n      <div class=\"send-box\">\n        <label for=\"form-label\" class=\"form-label\">Napisz wiadomość</label>\n        <input\n          type=\"text\"\n          class=\"send-input input\"\n          :value=\"message\"\n          autocomplete=\"off\"\n          placeholder=\"Npaisz wiadomość\"\n          @input=\"(event) => $emit('update:message', event.target.value)\"\n        />\n        <div v-if=\"errorSendMsg\" class=\"error-message\">\n          {{ errorSendMsg }}\n        </div>\n      </div>\n      <div class=\"btn-box\">\n        <button class=\"btn send-button\" type=\"submit\">Wyślij</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, onUpdated } from 'vue'\n\nexport default {\n  props: {\n    isPreview: {\n      type: Boolean,\n      required: true,\n    },\n    messages: {\n      type: Array,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    isTyping: {\n      type: Boolean,\n      required: true,\n    },\n    userId: {\n      type: String,\n      required: true,\n    },\n    errorSendMsg: {\n      type: String,\n      required: true,\n    },\n  },\n  emits: ['sendMessage', 'update:message', 'validateMessage'],\n  setup() {\n    let chatArea = ref(null)\n    let refscrollHeight = ref(null)\n\n    const update = () => {\n      nextTick(() => {\n        chatArea.value.scrollTo({\n          behavior: 'smooth',\n          top: refscrollHeight.value.clientHeight,\n        })\n      })\n    }\n\n    onUpdated(update)\n\n    return {\n      update,\n      chatArea,\n      refscrollHeight,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.chat-box {\n  width: 100%;\n  height: 100%;\n  margin: 1rem;\n  .chat-area {\n    width: 100%;\n    height: 100%;\n    box-shadow: 7px 5px 46px -16px $accent_color;\n    border: 2px solid $accent_color;\n    background-color: rgba($accent_color, 0.1);\n    overflow: auto;\n    .chat-message-item {\n      height: auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      color: #000;\n      overflow: auto;\n      .message-item {\n        display: inline-flex;\n        margin: 0.5rem 1rem;\n        .message-text {\n          background-color: rgba($accent_color, 0.5);\n          margin-top: 0;\n          text-align: left;\n          padding: 0.8rem;\n        }\n        .message-user {\n          display: flex;\n          text-align: left;\n          padding: 0.5rem;\n        }\n        .message-date {\n          font-weight: 200;\n        }\n      }\n    }\n    .message-is-typing {\n      font-weight: 600;\n      padding: 1rem;\n      text-align: left;\n    }\n  }\n  /*********SEND_MESSAGE*************/\n\n  .send-form {\n    width: 100%;\n    @include flex;\n    .send-box {\n      display: flex;\n      justify-content: center;\n      flex-direction: column;\n      align-items: center;\n      width: 60%;\n      margin: 1rem 1rem;\n      padding: 1rem 0;\n      .send-input {\n        width: 100%;\n      }\n    }\n    .btn-box {\n      width: 40%;\n      .send-button {\n        width: 100%;\n        padding: 1rem;\n      }\n    }\n  }\n}\n\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .chat-box {\n    width: 100%;\n  }\n}\n// @include mostPhone {\n//   .chat-box {\n//   }\n// }\n@include smallerDesktop {\n  .chat-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 900px) {\n  .users-box {\n    width: 100%;\n  }\n}\n\n@include mostTablets {\n}\n@media (min-width: 900px) {\n  .users-box {\n    display: block;\n  }\n  .chat-box {\n    display: block;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}