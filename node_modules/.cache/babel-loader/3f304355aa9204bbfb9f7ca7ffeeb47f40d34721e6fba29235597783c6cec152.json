{"ast":null,"code":"import { ref, nextTick, onUpdated } from \"vue\";\nexport default {\n  props: {\n    isPreview: {\n      type: Boolean,\n      required: true\n    },\n    roomName: {\n      type: String,\n      required: false\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    message: {\n      type: String,\n      required: false\n    },\n    isTyping: {\n      type: Boolean,\n      required: true\n    },\n    userId: {\n      type: String,\n      required: true\n    },\n    errorSendMsg: {\n      type: String,\n      required: true\n    }\n  },\n  emits: [\"sendMessage\", \"update:message\", \"validateMessage\", \"createRoom\", \"update:roomName\"],\n  setup() {\n    let chatArea = ref(null);\n    let refscrollHeight = ref(null);\n    const update = () => {\n      nextTick(() => {});\n    };\n    onUpdated(update);\n    return {\n      update,\n      chatArea,\n      refscrollHeight\n    };\n  }\n};","map":{"version":3,"mappings":"AAyBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDG,QAAQ,EAAE;MACRL,IAAI,EAAEM,KAAK;MACXJ,QAAQ,EAAE;IACZ,CAAC;IACDK,OAAO,EAAE;MACPP,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDM,QAAQ,EAAE;MACRR,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDO,MAAM,EAAE;MACNT,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDQ,YAAY,EAAE;MACZV,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDS,KAAK,EAAE,CACL,aAAa,EACb,gBAAgB,EAChB,iBAAiB,EACjB,YAAY,EACZ,iBAAiB,CAClB;EACDC,KAAK,GAAG;IACN,IAAIC,QAAO,GAAIlB,GAAG,CAAC,IAAI,CAAC;IACxB,IAAImB,eAAc,GAAInB,GAAG,CAAC,IAAI,CAAC;IAE/B,MAAMoB,MAAK,GAAI,MAAM;MACnBnB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACpB,CAAC;IAEDC,SAAS,CAACkB,MAAM,CAAC;IAEjB,OAAO;MACLA,MAAM;MACNF,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","names":["ref","nextTick","onUpdated","props","isPreview","type","Boolean","required","roomName","String","messages","Array","message","isTyping","userId","errorSendMsg","emits","setup","chatArea","refscrollHeight","update"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/chat_client/client/src/components/createRoom.vue"],"sourcesContent":["<template>\n  <div class=\"chat-box\" :class=\"[isPreview ? '' : 'none']\">\n    <form class=\"send-form\" novalidate @submit.prevent=\"$emit('createRoom')\">\n      <div class=\"send-box\">\n        <label for=\"form-label\" class=\"form-label\">Napisz wiadomość</label>\n        <input\n          type=\"text\"\n          class=\"send-input input\"\n          :value=\"roomName\"\n          autocomplete=\"off\"\n          placeholder=\"Room name\"\n          @input=\"(event) => $emit('update:roomName', event.target.value)\"\n        />\n        <div v-if=\"errorSendMsg\" class=\"error-message\">\n          {{ errorSendMsg }}\n        </div>\n      </div>\n      <div class=\"btn-box\">\n        <button class=\"btn send-button\" type=\"submit\">Create room</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, onUpdated } from \"vue\";\n\nexport default {\n  props: {\n    isPreview: {\n      type: Boolean,\n      required: true,\n    },\n    roomName: {\n      type: String,\n      required: false,\n    },\n    messages: {\n      type: Array,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: false,\n    },\n    isTyping: {\n      type: Boolean,\n      required: true,\n    },\n    userId: {\n      type: String,\n      required: true,\n    },\n    errorSendMsg: {\n      type: String,\n      required: true,\n    },\n  },\n  emits: [\n    \"sendMessage\",\n    \"update:message\",\n    \"validateMessage\",\n    \"createRoom\",\n    \"update:roomName\",\n  ],\n  setup() {\n    let chatArea = ref(null);\n    let refscrollHeight = ref(null);\n\n    const update = () => {\n      nextTick(() => {});\n    };\n\n    onUpdated(update);\n\n    return {\n      update,\n      chatArea,\n      refscrollHeight,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chat-box {\n  width: 100%;\n  height: 100%;\n  margin: 1rem;\n  .chat-area {\n    width: 100%;\n    height: 100%;\n    box-shadow: 7px 5px 46px -16px $accent_color;\n    border: 2px solid $accent_color;\n    background-color: rgba($accent_color, 0.1);\n    overflow: auto;\n    .chat-message-item {\n      height: auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      color: #000;\n      overflow: auto;\n      .message-item {\n        display: inline-flex;\n        margin: 0.5rem 1rem;\n        .message-text {\n          background-color: rgba($accent_color, 0.5);\n          margin-top: 0;\n          text-align: left;\n          padding: 0.8rem;\n        }\n        .message-user {\n          display: flex;\n          text-align: left;\n          padding: 0.5rem;\n        }\n        .message-date {\n          font-weight: 200;\n        }\n      }\n    }\n    .message-is-typing {\n      font-weight: 600;\n      padding: 1rem;\n      text-align: left;\n    }\n  }\n  /*********SEND_MESSAGE*************/\n\n  .send-form {\n    width: 100%;\n    @include flex;\n    .send-box {\n      display: flex;\n      justify-content: center;\n      flex-direction: column;\n      align-items: center;\n      width: 60%;\n      margin: 1rem 1rem;\n      padding: 1rem 0;\n      .send-input {\n        width: 100%;\n      }\n    }\n    .btn-box {\n      width: 40%;\n      .send-button {\n        width: 100%;\n        padding: 1rem;\n      }\n    }\n  }\n}\n\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .chat-box {\n    width: 100%;\n  }\n}\n// @include mostPhone {\n//   .chat-box {\n//   }\n// }\n@include smallerDesktop {\n  .chat-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 900px) {\n  .users-box {\n    width: 100%;\n  }\n}\n\n@include mostTablets {\n}\n@media (min-width: 900px) {\n  .users-box {\n    display: block;\n  }\n  .chat-box {\n    display: block;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}