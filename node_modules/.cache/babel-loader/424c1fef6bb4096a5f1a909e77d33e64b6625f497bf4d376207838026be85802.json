{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  \"class\": \"page-headline\"\n}, \"Czat Lite\", -1 /* HOISTED */);\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"switch-box\"\n};\nvar _hoisted_4 = {\n  \"class\": \"switch-list\"\n};\nvar _hoisted_5 = {\n  key: 2,\n  \"class\": \"wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_JoinUserComponent = _resolveComponent(\"JoinUserComponent\");\n  var _component_createRoomComponent = _resolveComponent(\"createRoomComponent\");\n  var _component_UserListComponent = _resolveComponent(\"UserListComponent\");\n  var _component_ChatBoxComponent = _resolveComponent(\"ChatBoxComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" Responsive toggle switch \"), $setup.isReady ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [_createElementVNode(\"li\", {\n    \"class\": _normalizeClass([\"list-item\", {\n      selected: $setup.selected === 0\n    }]),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $setup.changeSelected(0), $setup.isPreview = false;\n    })\n  }, \" Użytkownicy \", 2 /* CLASS */), _createElementVNode(\"li\", {\n    \"class\": _normalizeClass([\"list-item\", {\n      selected: $setup.selected === 1\n    }]),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $setup.changeSelected(1), $setup.isPreview = true;\n    })\n  }, \" Czat \", 2 /* CLASS */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" End Responsive toggle \"), !$setup.isReady ? (_openBlock(), _createBlock(_component_JoinUserComponent, {\n    key: 1,\n    username: $setup.username,\n    \"onUpdate:username\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.username = $event;\n    }),\n    onSubmit: $setup.joinToChat,\n    errorLoginMsg: $setup.errorLoginMsg\n  }, null, 8 /* PROPS */, [\"username\", \"onSubmit\", \"errorLoginMsg\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"<div class=\\\"wrapper\\\" v-if=\\\"isReady\\\">\\n      <createRoomComponent\\n        :isPreview=\\\"isPreview\\\"\\n        :messages=\\\"messages\\\"\\n        :isTyping=\\\"isTyping\\\"\\n        :userId=\\\"userId\\\"\\n        :errorSendMsg=\\\"errorSendMsg\\\"\\n        v-model:roomName=\\\"roomName\\\"\\n        @submit=\\\"createRoom\\\"\\n      />\\n    </div>\"), $setup.isReady ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_createRoomComponent, {\n    isPreview: $setup.isPreview,\n    messages: $setup.messages,\n    isTyping: $setup.isTyping,\n    userId: $setup.userId,\n    errorSendMsg: $setup.errorSendMsg,\n    roomName: $setup.roomName,\n    \"onUpdate:roomName\": _cache[3] || (_cache[3] = function ($event) {\n      return $setup.roomName = $event;\n    }),\n    onSubmit: $setup.createRoom\n  }, null, 8 /* PROPS */, [\"isPreview\", \"messages\", \"isTyping\", \"userId\", \"errorSendMsg\", \"roomName\", \"onSubmit\"]), _createVNode(_component_UserListComponent, {\n    users: $setup.users,\n    roomId: $setup.roomId,\n    rooms: $setup.rooms,\n    isPreview: $setup.isPreview,\n    \"onUpdate:roomId\": _cache[4] || (_cache[4] = function ($event) {\n      return $setup.roomId = $event;\n    })\n  }, null, 8 /* PROPS */, [\"users\", \"roomId\", \"rooms\", \"isPreview\"]), _createVNode(_component_ChatBoxComponent, {\n    isPreview: $setup.isPreview,\n    messages: $setup.messages,\n    isTyping: $setup.isTyping,\n    userId: $setup.userId,\n    errorSendMsg: $setup.errorSendMsg,\n    message: $setup.message,\n    \"onUpdate:message\": _cache[5] || (_cache[5] = function ($event) {\n      return $setup.message = $event;\n    }),\n    onSubmit: $setup.sendMessage\n  }, null, 8 /* PROPS */, [\"isPreview\", \"messages\", \"isTyping\", \"userId\", \"errorSendMsg\", \"message\", \"onSubmit\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;AAAW;8BACpBA,oBAAwC;EAApC,SAAM;AAAe,GAAC,WAAS;;;EAE9B,SAAM;;;EACL,SAAM;AAAa;;;EAqCpB,SAAM;;;;;;;uBAzCbC,oBAqEM,OArENC,UAqEM,GApEJC,UAAwC,EACxCC,iDAAiC,EACHC,cAAO,kBAArCJ,oBAiBM,OAjBNK,UAiBM,GAhBJN,oBAeK,MAfLO,UAeK,GAdHP,oBAMK;IALH,SAAKQ,iBAAC,WAAW;MAAAC,UACGJ,eAAQ;IAAA;IAC3BK,OAAK;MAAA,OAAEL,qBAAc,KAAMA,gBAAS;IAAA;KACtC,eAED,kBACAL,oBAMK;IALH,SAAKQ,iBAAC,WAAW;MAAAC,UACGJ,eAAQ;IAAA;IAC3BK,OAAK;MAAA,OAAEL,qBAAc,KAAMA,gBAAS;IAAA;KACtC,QAED,2DAGJD,8CAA8B,GAGrBC,cAAO,kBADhBM,aAKEC;;IAHQC,QAAQ,EAAER,eAAQ;;aAARA,eAAQ;IAAA;IACzBS,QAAM,EAAET,iBAAU;IAClBU,aAAa,EAAEV;2GAElBD,8VAUS,EAEkBC,cAAO,kBAAlCJ,oBA2BM,OA3BNe,UA2BM,GA1BJC,aAQEC;IAPCC,SAAS,EAAEd,gBAAS;IACpBe,QAAQ,EAAEf,eAAQ;IAClBgB,QAAQ,EAAEhB,eAAQ;IAClBiB,MAAM,EAAEjB,aAAM;IACdkB,YAAY,EAAElB,mBAAY;IACnBmB,QAAQ,EAAEnB,eAAQ;;aAARA,eAAQ;IAAA;IACzBS,QAAM,EAAET;oHAEXY,aAMEQ;IALDC,KAAK,EAAErB,YAAK;IACZsB,MAAM,EAAEtB,aAAM;IACduB,KAAK,EAAEvB,YAAK;IACZc,SAAS,EAAEd,gBAAS;;aACLA,aAAM;IAAA;sEAGtBY,aAQEY;IAPCV,SAAS,EAAEd,gBAAS;IACpBe,QAAQ,EAAEf,eAAQ;IAClBgB,QAAQ,EAAEhB,eAAQ;IAClBiB,MAAM,EAAEjB,aAAM;IACdkB,YAAY,EAAElB,mBAAY;IACnByB,OAAO,EAAEzB,cAAO;;aAAPA,cAAO;IAAA;IACvBS,QAAM,EAAET","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","$setup","_hoisted_3","_hoisted_4","_normalizeClass","selected","onClick","_createBlock","_component_JoinUserComponent","username","onSubmit","errorLoginMsg","_hoisted_5","_createVNode","_component_createRoomComponent","isPreview","messages","isTyping","userId","errorSendMsg","roomName","_component_UserListComponent","users","roomId","rooms","_component_ChatBoxComponent","message"],"sourceRoot":"","sources":["/home/ubuntu/Escritorio/isucorp/client/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"page-headline\">Czat Lite</h1>\n    <!-- Responsive toggle switch -->\n    <div class=\"switch-box\" v-if=\"isReady\">\n      <ul class=\"switch-list\">\n        <li\n          class=\"list-item\"\n          :class=\"{ selected: selected === 0 }\"\n          @click=\"changeSelected(0), (isPreview = false)\"\n        >\n          Użytkownicy\n        </li>\n        <li\n          class=\"list-item\"\n          :class=\"{ selected: selected === 1 }\"\n          @click=\"changeSelected(1), (isPreview = true)\"\n        >\n          Czat\n        </li>\n      </ul>\n    </div>\n    <!-- End Responsive toggle -->\n\n    <JoinUserComponent\n      v-if=\"!isReady\"\n      v-model:username=\"username\"\n      @submit=\"joinToChat\"\n      :errorLoginMsg=\"errorLoginMsg\"\n    />\n    <!--<div class=\"wrapper\" v-if=\"isReady\">\n      <createRoomComponent\n        :isPreview=\"isPreview\"\n        :messages=\"messages\"\n        :isTyping=\"isTyping\"\n        :userId=\"userId\"\n        :errorSendMsg=\"errorSendMsg\"\n        v-model:roomName=\"roomName\"\n        @submit=\"createRoom\"\n      />\n    </div>-->\n\n    <div class=\"wrapper\" v-if=\"isReady\">\n      <createRoomComponent\n        :isPreview=\"isPreview\"\n        :messages=\"messages\"\n        :isTyping=\"isTyping\"\n        :userId=\"userId\"\n        :errorSendMsg=\"errorSendMsg\"\n        v-model:roomName=\"roomName\"\n        @submit=\"createRoom\"\n      />\n      <UserListComponent \n      :users=\"users\" \n      :roomId=\"roomId\" \n      :rooms=\"rooms\" \n      :isPreview=\"isPreview\"\n      v-model:roomId=\"roomId\"\n      />\n\n      <ChatBoxComponent\n        :isPreview=\"isPreview\"\n        :messages=\"messages\"\n        :isTyping=\"isTyping\"\n        :userId=\"userId\"\n        :errorSendMsg=\"errorSendMsg\"\n        v-model:message=\"message\"\n        @submit=\"sendMessage\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client'\nimport { ref, watch } from 'vue'\n\nimport JoinUserComponent from '@/components/LoginBox'\nimport UserListComponent from '@/components/UserList'\nimport ChatBoxComponent from '@/components/ChatBox'\nimport createRoomComponent from '@/components/createRoom.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    JoinUserComponent,\n    UserListComponent,\n    ChatBoxComponent,\n    createRoomComponent\n  },\n  setup() {\n    const socket = io('http://192.168.1.86:3000')\n    const users = ref([])\n    const rooms = ref([])\n    const messages = ref([])\n    const message = ref('')\n    const roomId = ref('')\n    const roomName = ref('')\n    const username = ref('')\n    const selected = ref(0)\n\n    let isReady = ref(false)\n    let isPreview = ref(false)\n    let isTyping = ref(false)\n    let userId = ref('')\n\n    const changeSelected = (i) => {\n      selected.value = i\n    }\n\n    /*********VALIDATE************* */\n\n    let errorLoginMsg = ref('')\n    let errorSendMsg = ref('')\n\n    //***************Socket function*******************\n\n    socket.on('initChat', (data) => {\n      messages.value = data.messages\n    })\n\n    socket.on('userConnected', (username) => {\n      console.log(`${username} has joined`)\n    })\n\n    socket.on('userDisconnected', (username) => {\n      console.log(`${username} has leaved`)\n    })\n\n    socket.on('getUsers', (data) => {\n      users.value = data\n    })\n    socket.on('getRooms', (data) => {\n      rooms.value = data\n    })\n\n    socket.on('newMessage', (data) => {\n      messages.value.push(data)\n    })\n    socket.on('newRoom', (data) => {\n      rooms.value.push(data)\n    })\n    socket.on('refreshChat', (data) => {\n      messages.value = data\n    })\n\n    // *********User Typing********\n\n    socket.on('isTyping', (data) => {\n      isTyping.value = data\n    })\n    socket.on('stopTyping', () => {\n      isTyping.value = false\n    })\n\n    watch(message, (m) => {\n      m ? socket.emit('isTyping', username.value) : socket.emit('stopTyping')\n    })\n\n    watch(roomId, (m) => {\n      m ? socket.emit('newRoomId', roomId): ''\n    })\n\n    //*****Join User to Chat************\n\n    const joinToChat = () => {\n      if (/^(([a-zA-Z0-9]{3,}))+$/.test(username.value) == false) {\n        errorLoginMsg.value = 'Użuj minimum 3 liter lub cyfr'\n      } else {\n        socket.emit('enterUsername', { username: username.value })\n        username.value = ''\n        isReady.value = true\n        userId.value = socket.id\n      }\n    }\n\n    /*********Send New Message******** */\n\n    const sendMessage = () => {\n      if (message.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste'\n      } else {\n        console.log('the room id is ', roomId.value)\n        socket.emit('newMessage', {\n          room: roomId,\n          username: username.value,\n          message: message.value,\n        })\n        message.value = ''\n      }\n    }\n\n    const createRoom = () => {\n      if (roomName.value == '') {\n        errorSendMsg.value = 'Pole nie może być puste'\n      } else {\n        console.log('the room id is ', roomId)\n        socket.emit('newRoom', {\n          roomName: roomName.value,\n        })\n        roomName.value = ''\n      }\n    }\n\n    return {\n      socket,\n      username,\n      message,\n      roomName,\n      users,\n      rooms,\n      roomId,\n      messages,\n      joinToChat,\n      sendMessage,\n      createRoom,\n      userId,\n      isReady,\n      isTyping,\n      isPreview,\n      selected,\n      changeSelected,\n      errorLoginMsg,\n      errorSendMsg,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@use './scss/index.scss' as *;\n\n.wrapper {\n  @include flex;\n  width: 100%;\n  height: 30rem;\n}\n/*******MEDIA_QUERY*************/\n\n@include smallerPhone {\n  .container {\n    font-size: $font_size_to_340;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include mostPhone {\n  .container {\n    font-size: $font_size_to_340;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include mostTablets {\n  .container {\n    font-size: $font_size_to_576;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n@include smallerDesktop {\n  .container {\n    font-size: $font_size_to_1200;\n    .wrapper {\n      width: 100%;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}